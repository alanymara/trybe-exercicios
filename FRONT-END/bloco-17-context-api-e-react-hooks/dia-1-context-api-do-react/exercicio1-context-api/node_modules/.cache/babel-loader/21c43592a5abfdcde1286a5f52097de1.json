{"ast":null,"code":"var _jsxFileName = \"/home/alanyfernandes/Documents/Trybe/FRONT-END/bloco-17-context-api-e-react-hooks/dia-1-context-api-do-react/exercicio1-context-api/src/List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport ToDoContext from './context/ToDoContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction List() {\n  _s();\n\n  const {\n    tasks,\n    removeTask\n  } = useContext(ToDoContext);\n  const [counter, setCounter] = useState(0);\n  useEffect(() => {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: task => removeTask(task),\n      children: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 35\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\n_s(List, \"rJ9iPUZPaupou7b87nSZMl3ApZ0=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/alanyfernandes/Documents/Trybe/FRONT-END/bloco-17-context-api-e-react-hooks/dia-1-context-api-do-react/exercicio1-context-api/src/List.js"],"names":["React","useContext","useEffect","useState","ToDoContext","List","tasks","removeTask","counter","setCounter","map","task"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,WAAP,MAAwB,uBAAxB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAwBN,UAAU,CAACG,WAAD,CAAxC;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,CAAT;AAIA,sBACI;AAAA,cACKI,KAAK,CAACI,GAAN,CAAWC,IAAD,iBAAW;AAAG,MAAA,OAAO,EAAGA,IAAD,IAAUJ,UAAU,CAACI,IAAD,CAAhC;AAAA,gBAA2CA;AAA3C;AAAA;AAAA;AAAA;AAAA,YAArB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAbQN,I;;KAAAA,I;AAeT,eAAeA,IAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport ToDoContext from './context/ToDoContext';\n\nfunction List() {\n    const { tasks, removeTask } = useContext(ToDoContext);\n    const [counter, setCounter] = useState(0);\n\n    useEffect(() => {\n\n    })\n    \n    return (\n        <div>\n           { tasks.map((task) => (<p onClick={(task) => removeTask(task) }>{ task }</p>)) }\n        </div>\n    )\n}\n\nexport default List;"]},"metadata":{},"sourceType":"module"}