{"ast":null,"code":"var _jsxFileName = \"/home/alanyfernandes/Documents/Trybe/FRONT-END/bloco-17-context-api-e-react-hooks/dia-1-context-api-do-react/exercicio1-context-api/src/List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport ToDoContext from './context/ToDoContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction List() {\n  _s();\n\n  const {\n    tasks,\n    removeTask,\n    setCounter\n  } = useContext(ToDoContext);\n  useEffect(() => {\n    if (tasks.length > 2) {\n      setCounter(tasks.length + 1000);\n    }\n  }, [tasks]); //sem [], roda quando receber algo novo, [] vazio é didMount, [conteudo] didUpdate\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: () => removeTask(task),\n      children: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 14\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\n_s(List, \"LUwGu+bSUwG2OkVzX/zA3idNXvs=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/alanyfernandes/Documents/Trybe/FRONT-END/bloco-17-context-api-e-react-hooks/dia-1-context-api-do-react/exercicio1-context-api/src/List.js"],"names":["React","useContext","useEffect","ToDoContext","List","tasks","removeTask","setCounter","length","map","task"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,WAAP,MAAwB,uBAAxB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,UAAT;AAAqBC,IAAAA;AAArB,MAAoCN,UAAU,CAACE,WAAD,CAApD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGG,KAAK,CAACG,MAAN,GAAe,CAAlB,EAAoB;AAClBD,MAAAA,UAAU,CAACF,KAAK,CAACG,MAAN,GAAe,IAAhB,CAAV;AACD;AACF,GAJQ,EAIN,CAACH,KAAD,CAJM,CAAT,CAHY,CAOC;;AACb,sBACI;AAAA,cACKA,KAAK,CAACI,GAAN,CAAWC,IAAD,iBACV;AACA,MAAA,OAAO,EAAE,MAAMJ,UAAU,CAACI,IAAD,CADzB;AAAA,gBAGGA;AAHH;AAAA;AAAA;AAAA;AAAA,YADA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAlBQN,I;;KAAAA,I;AAoBT,eAAeA,IAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport ToDoContext from './context/ToDoContext';\n\nfunction List() {\n    const { tasks, removeTask, setCounter } = useContext(ToDoContext);\n\n    useEffect(() => {\n      if(tasks.length > 2){\n        setCounter(tasks.length + 1000);\n      }\n    }, [tasks]); //sem [], roda quando receber algo novo, [] vazio é didMount, [conteudo] didUpdate\n    return (\n        <div>\n           { tasks.map((task) => (\n             <p\n             onClick={() => removeTask(task)}\n             >\n              { task }\n            </p>)) }\n        </div>\n    )\n}\n\nexport default List;"]},"metadata":{},"sourceType":"module"}